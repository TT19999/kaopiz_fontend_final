{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\kaopiz_fontend_final\\\\src\\\\components\\\\Profile\\\\form_reset.jsx\";\nimport React from 'react';\nimport { validateAll } from 'indicative';\nimport axios from 'axios';\n\nvar FormReset =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormReset, _React$Component);\n\n  function FormReset(props) {\n    var _this;\n\n    _classCallCheck(this, FormReset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormReset).call(this, props));\n    _this.rules = {\n      old_password: 'required|string|min:6',\n      new_password: 'required|string|min:6|confirmed'\n    };\n    _this.messages = {\n      required: 'The {{ field }} is required.',\n      min: 'the password need min 6',\n      'new_password.confirmed': 'The password confirmation does not match.'\n    };\n\n    _this.handleInputChange = function (event) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, event.target.name, event.target.value), _defineProperty(_this$setState, \"errors\", []), _this$setState));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log(_this.state); // validating user data\n\n      var data = _this.state;\n      validateAll(data, _this.rules, _this.messages).then(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post('/api/user/resetPassword', {\n                  old_password: _this.state.old_password,\n                  new_password: _this.state.new_password,\n                  new_password_confirmation: _this.state.new_password_confirmation\n                }, {\n                  headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"userToken\")\n                  }\n                }).then(function (response) {\n                  alert(response.data.message);\n                }).catch(function (errors) {\n                  console.log(errors.response);\n                  alert(errors.response.data.errors);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))).catch(function (errors) {\n        console.log(errors);\n        var formattedErrors = {};\n        errors.forEach(function (error) {\n          return formattedErrors[error.field] = error.message;\n        });\n\n        _this.setState({\n          errors: formattedErrors\n        });\n      });\n    };\n\n    _this.state = {\n      old_password: '',\n      new_password: '',\n      new_password_confirmation: '',\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(FormReset, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        className: \"col-md-10\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"InputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Old password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"old_password\",\n        onChange: this.handleInputChange,\n        class: \"form-control\",\n        id: \"InputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), this.state.errors['old_password'] && React.createElement(\"small\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.errors['old_password'])), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"InputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"new_password\",\n        onChange: this.handleInputChange,\n        class: \"form-control\",\n        id: \"InputPassword1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), this.state.errors['new_password'] && React.createElement(\"small\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.errors['new_password'])), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"InputPassword2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"new_password_confirmation\",\n        onChange: this.handleInputChange,\n        class: \"form-control\",\n        id: \"InputPassword2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return FormReset;\n}(React.Component);\n\nexport default FormReset;","map":{"version":3,"sources":["F:\\xampp\\htdocs\\kaopiz_fontend_final\\src\\components\\Profile\\form_reset.jsx"],"names":["React","validateAll","axios","FormReset","props","rules","old_password","new_password","messages","required","min","handleInputChange","event","setState","target","name","value","handleSubmit","preventDefault","console","log","state","data","then","post","new_password_confirmation","headers","localStorage","getItem","response","alert","message","catch","errors","formattedErrors","forEach","error","field","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { validateAll } from 'indicative';\r\nimport axios from 'axios'\r\n\r\nclass FormReset extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            old_password: '',\r\n            new_password: '',\r\n            new_password_confirmation: '',\r\n            errors: [],\r\n    }\r\n    }   \r\n    rules = {\r\n        old_password: 'required|string|min:6',\r\n        new_password: 'required|string|min:6|confirmed'\r\n    };\r\n    messages = {\r\n        required: 'The {{ field }} is required.',\r\n        min : 'the password need min 6',\r\n        'new_password.confirmed': 'The password confirmation does not match.'\r\n    }\r\n    \r\n    handleInputChange = (event) => {\r\n            this.setState({\r\n              [event.target.name]: event.target.value,\r\n              errors: [],\r\n            })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        // validating user data\r\n        const data = this.state;\r\n        validateAll(data,this.rules, this.messages)\r\n        .then(async () => {\r\n            //successfull login\r\n            await axios.post('/api/user/resetPassword', {\r\n                old_password: this.state.old_password,\r\n                new_password: this.state.new_password,\r\n                new_password_confirmation: this.state.new_password_confirmation,\r\n            },{\r\n                headers: {'Authorization' : 'Bearer ' + localStorage.getItem(\"userToken\")}\r\n            }).then(response =>  {\r\n                alert(response.data.message)\r\n            }).catch(errors => {\r\n            console.log(errors.response);\r\n            alert(errors.response.data.errors)\r\n            })\r\n        })\r\n        .catch(errors => {\r\n            console.log(errors);\r\n            const formattedErrors = {}\r\n            errors.forEach(error => formattedErrors[error.field] = error.message)\r\n            this.setState({\r\n            errors: formattedErrors\r\n            })\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <form className=\"col-md-10\" onSubmit={this.handleSubmit}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"InputPassword\">Old password</label>\r\n                    <input type=\"password\" name=\"old_password\" onChange={this.handleInputChange} class=\"form-control\" id=\"InputPassword\"/>\r\n                    {\r\n                        this.state.errors['old_password'] &&\r\n                        <small className=\"text-danger\">{this.state.errors['old_password']}</small>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"InputPassword1\">New Password</label>\r\n                    <input type=\"password\" name=\"new_password\" onChange={this.handleInputChange} class=\"form-control\" id=\"InputPassword1\"/>\r\n                    {\r\n                        this.state.errors['new_password'] &&\r\n                        <small className=\"text-danger\">{this.state.errors['new_password']}</small>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"InputPassword2\">New Password</label>\r\n                    <input type=\"password\" name=\"new_password_confirmation\" onChange={this.handleInputChange} class=\"form-control\" id=\"InputPassword2\"/>\r\n                </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default FormReset;"]},"metadata":{},"sourceType":"module"}